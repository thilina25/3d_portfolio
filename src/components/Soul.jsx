/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: vrhuman (https://sketchfab.com/vrhuman)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/soul-of-cinder-dark-souls-3-boss-tilt-brush-b1e1b1ef899a40a2b04934d51f3d4ad3
Title: Soul Of Cinder - Dark Souls 3 Boss Tilt Brush
*/

import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Soul(props) {
    const group = useRef()
    const { nodes, materials, animations } = useGLTF('./models/soul_of_cinder_-_dark_souls_3_boss_tilt_brush.glb')
    const { actions } = useAnimations(animations, group)
      useEffect(()=>{
        if(animations.length > 0){
            actions[animations[0].name]?.play()
      }
    },[actions, animations])
  return (
    <group {...props} dispose={null}
        >
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Ink_InkLambert_0.geometry}>
        <meshStandardMaterial
          color="#FF5C00"
          emissive="#FF5C00"
          emissiveIntensity={2.5}
          metalness={0.8}
          roughness={0.2}
        />
      </mesh>
      <mesh geometry={nodes.All_Oil_Paint_Oil_PaintLambert_0.geometry}>
        <meshStandardMaterial
          color="#996515"
          emissive="#FFD700"
          emissiveIntensity={3}
          metalness={10}
          roughness={0.3}
        />
      </mesh>
      <mesh geometry={nodes.All_Duct_Tape_Duct_TapeLambert_0.geometry}>
        <meshStandardMaterial
          color="silver"
          metalness={1}
          roughness={0.2}
        />
      </mesh>
      <mesh geometry={nodes.All_Fire_FireLambert_0.geometry}>
        <meshStandardMaterial
          color="#ff3300"
          emissive="#ff6600"
          emissiveIntensity={50}
        />
      </mesh>
      <mesh geometry={nodes.All_Highlighter_HighlighterLambert_0.geometry}>
        <meshStandardMaterial
          color="#39ff14"
          emissive="#39ff14"
          emissiveIntensity={300}
        />
      </mesh>

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Oil_Paint_Oil_PaintLambert_0.geometry}
        material={materials.Oil_PaintLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Oil_Paint_Oil_PaintLambert_0_1.geometry}
        material={materials.Oil_PaintLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Oil_Paint_Oil_PaintLambert_0_2.geometry}
        material={materials.Oil_PaintLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Duct_Tape_Duct_TapeLambert_0.geometry}
        material={materials.Duct_TapeLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Paper_PaperLambert_0.geometry}
        material={materials.PaperLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Thick_Paint_Thick_PaintLambert_0.geometry}
        material={materials.Thick_PaintLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Disco__0.geometry}
        material={materials.RootNode}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Coarse_Bristles_Coarse_BristlesLambert_0.geometry}
        material={materials.Coarse_BristlesLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Fire_FireLambert_0.geometry}
        material={materials.FireLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Highlighter_HighlighterLambert_0.geometry}
        material={materials.HighlighterLambert}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.All_Light_LightLambert_0.geometry}
        material={materials.LightLambert}
      />
    </group>
  )
}

useGLTF.preload('/soul_of_cinder_-_dark_souls_3_boss_tilt_brush.glb')